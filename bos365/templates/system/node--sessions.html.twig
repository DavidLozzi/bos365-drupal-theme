{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}


{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}

  {% if display_submitted %}
    <footer class="comment-submitted">
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}
<div{{ content_attributes.addClass('node__content') }}>
    
  </div>
  

  
  <div class="row session-details">
  <div class="session">
    <div class="row">
      <div class="col-md-12 title">{{ content.title }}</div>
    </div>
    <div class="row">
      <div class="col-md-12 event-description"> </div>
    </div>
    <div class="row content">
      <div class="col-md-4 col-xs-12" >
        <div class="label col-md-12">LOCATION</div>
        <div class="value col-md-12"></div>
        <div class="map-marker"><i class="fa fa-map-marker"></i><a href="#">Driving directions and Map &gt;</a></div>
      </div>
      <div class="col-md-4 col-xs-12" >       
        <div class="label col-md-12">Date</div>
        <div class="value col-md-12"> {{ created.content | date("Y/m/d") }}</div>
      </div>
      <div class="col-md-2 col-xs-12" >       
        <div class="label col-md-12">Sponsored By</div>
        
      </div>
    </div>
  </div>
  <div class="speaker-details">
    <div class="col-md-12"><div class="title">Speaker</div></div>
    <div class="col-md-12"><div class="image"><img src="2.png" /></div></div>
    <div class="col-md-12"><div class="name">Dimitri Ayrapetov</div></div>
    <div class="col-md-12 socio-icons"><a href=""><i class="fa fa-linkedin"></i></a><a href=""><i class="fa fa-twitter"></i></a><a href=""><i class="fa fa-globe"></i></a></div>
    <div class="col-md-12"><div class="description">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam fermentum aliquam varius. Quisque dignissim neque et varius hendrerit. Etiam hendrerit nisl a tincidunt feugiat. In eros quam, vehicula vitae tellus vel, faucibus suscipit velit. Nulla sed euismod magna. Quisque elementum ante at pharetra viverra. Praesent posuere ac augue consequat malesuada. Etiam ut hendrerit sem, non sollicitudin nibh.</div></div>
  </div>
</div>

</article>






