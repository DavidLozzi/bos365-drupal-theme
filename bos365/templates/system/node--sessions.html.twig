{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}


{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}

  
<div{{ content_attributes.addClass('node__content') }}>
     
  </div>
  

 

  <div class="row session-details">
  <div class="session">
    <div class="row">
      <div class="col-md-12 title">{{ node.label }}</div>
    </div>
    <div class="row">
      <div class="col-md-12 event-description">{{content.field_body }}</div>
    </div>
    <div class="row content">
      <div class="col-md-4 col-xs-12" >
        <div class="label col-md-12">LOCATION</div>
        <div class="value col-md-12">{{content.field_venue }}</div>
        <div class="map-marker"><i class="fa fa-map-marker"></i><a href="#">Driving directions and Map &gt;</a></div>
      </div>
      <div class="col-md-4 col-xs-12" >       
        <div class="label col-md-12">Date</div>
        <div class="value col-md-12">{{ content.field_date }}</div>
      </div>
      <div class="col-md-2 col-xs-12" >       
        <div class="label col-md-12">Sponsored By</div>
        {{ content.logo }}
      </div>
    </div>
  </div>
  {{ content.field_speaker }}
</div>

<div class="resources">
    <div class="header">Resources</div>
    <div class="resource"><a href="{{ content.field_speaker_presentation_link_.0['#url'] }}"><img src="themes/bos365/images/ppt.png"></a> Lorem Ipsum site amet file</div>
    <div class="resource"><a href="{{ content.field_speaker_presentation_uploa.0 }}"><img src="themes/bos365/images/ppt.png"></a> Lorem Ipsum site amet file 2</div>
  </div>
  
  
  <div class="video">
    <div class="header">Video
  </div>
    â€‹<div><iframe width="70%" height="550" src="{{ content.field_video.0['#url'] }}" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></div>
    
  </div>

</article>






